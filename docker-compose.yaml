services:
  rabbitmq:
    image: rabbitmq:3-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  flask-app:
    build: ./flask-app
    container_name: flask-app
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RADARR_API_KEY=dfce11e9f95f4f5780d2d68c7d883dd2
      - RADARR_API_URL=http://radarr:7878/api/v3/movie
      - PUID=1000
      - PGID=1000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always

  worker:
    build: ./worker
    container_name: worker
    environment:
      - RABBITMQ_HOST=rabbitmq
      - PUID=1000
      - PGID=1000
      - DEFAULT_TARGET_LANGUAGE=hrv
    depends_on:
      rabbitmq:
        condition: service_healthy
      whisper:
        condition: service_started
      aeneas:
        condition: service_started
    volumes:
      - ./mediacenter:/mediacenter
    restart: always

  whisper:
    image: onerahmet/openai-whisper-asr-webservice:latest-gpu
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
    ports:
      - "9000:9000"
    environment:
      - ASR_MODEL=small
      - ASR_ENGINE=faster_whisper
    runtime: nvidia
    restart: always
    volumes:
      - ./mediacenter:/mediacenter

  aeneas:
    build: ./aeneas
    container_name: aeneas
    ports:
      - "5001:5001"
    volumes:
      - ./mediacenter:/mediacenter
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: always

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Belgrade
      - UMASK_SET=022
    volumes:
      - ./sonarr/config:/config
      - ./mediacenter:/mediacenter
    ports:
      - 8989:8989
    restart: always

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Belgrade
      - UMASK_SET=022
    volumes:
      - ./radarr/config:/config
      - ./mediacenter:/mediacenter
    ports:
      - 7878:7878
    restart: always

